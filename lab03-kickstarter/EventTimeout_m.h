//
// Generated file, do not edit! Created by opp_msgtool 6.0 from EventTimeout.msg.
//

#ifndef __EVENTTIMEOUT_M_H
#define __EVENTTIMEOUT_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// opp_msgtool version check
#define MSGC_VERSION 0x0600
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgtool: 'make clean' should help.
#endif

class EventTimeout;
/**
 * Class generated from <tt>EventTimeout.msg:2</tt> by opp_msgtool.
 * <pre>
 * message EventTimeout
 * {
 *     int seqN;
 *     int packetSize;
 * }
 * </pre>
 */
class EventTimeout : public ::omnetpp::cMessage
{
  protected:
    int seqN = 0;
    int packetSize = 0;

  private:
    void copy(const EventTimeout& other);

  protected:
    bool operator==(const EventTimeout&) = delete;

  public:
    EventTimeout(const char *name=nullptr, short kind=0);
    EventTimeout(const EventTimeout& other);
    virtual ~EventTimeout();
    EventTimeout& operator=(const EventTimeout& other);
    virtual EventTimeout *dup() const override {return new EventTimeout(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    virtual int getSeqN() const;
    virtual void setSeqN(int seqN);

    virtual int getPacketSize() const;
    virtual void setPacketSize(int packetSize);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const EventTimeout& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, EventTimeout& obj) {obj.parsimUnpack(b);}


namespace omnetpp {

template<> inline EventTimeout *fromAnyPtr(any_ptr ptr) { return check_and_cast<EventTimeout*>(ptr.get<cObject>()); }

}  // namespace omnetpp

#endif // ifndef __EVENTTIMEOUT_M_H

